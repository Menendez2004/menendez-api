type CartPayload {
    userId: ID!
    productId: ID!
    quantity: Int!
    #SUM 
    unitPrice: Float!
    subTotal: Float!
    total: Float!
}

type CartItemPayload {
    items: [CartPayload!]!
    subTotal: Float!
    total: Float!
}

input CreateCartItemInput {
    productId: ID!
    quantity: Int!
}

type Query {
    #to see items
    getCartItems: CartItemPayload!
}

type mutation {
    addCartItem(input: CreateCartItemInput!): CartPayload!
    
    updateProductQuantity(input: CreateCartItemInput): CartPayload!

    removeCartItem(productId: ID!): Boolean|
}

#need pagination  ?